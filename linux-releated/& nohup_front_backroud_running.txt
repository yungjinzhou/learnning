可以在命令后面加上& 实现后台运行。
例如：sh test.sh & 

如果放在后台运行的作业会产生大量的输出，最好使用下面的方法把它的输出重定向到某个文件中：
command  >  out.file  2>&1  & 

如果远程连接，用此方法，远程连接断开后会停止运行，可以用nohup解决这个问题


nohup command &


如果使用nohup命令提交作业，那么在缺省情况下该作业的所有输出都被重定向到一个名为nohup.out的文件中；
nohup并不支持内置命令



也可以运行命令后，ctrl+z暂停，然后输入bg调到后台执行，通过jobs查看或者fg调到前台查看



jobs 
查看当前有多少在后台运行的命令。



jobs -l选项可显示所有任务的PID，
jobs的状态可以是running, stopped, Terminated。
但是如果任务被终止了（kill），shell 从当前的shell环境已知的列表中删除任务的进程标识。

jobs -r 正在运行的任务

jobs -s 暂停的任务




fg 将后台命令拿到前台处理

fg %jobsnumber
fg默认取出最近被放到后台的job，有+的， 前面有-的是倒数第二个放到后台处理的job




在用linux命令时候， 我们经常需要同时执行多条命令，
分号： 顺序地独立执行各条命令， 彼此之间不关心是否失败， 所有命令都会执行。

? ? ? 
&& ?： 顺序执行各条命令， 只有当前一个执行成功时候， 才执行后面的。

? ? ? ? 
|| ? ：?顺序执行各条命令， 只有当前面一个执行失败的时候， 才执行后面的。



? ? ? 













nohup python2.7 111.py 1 &
1为sys.argv
111.py为python 的脚本文件

cp file1 file2 &  后台将文件1复制为文件2